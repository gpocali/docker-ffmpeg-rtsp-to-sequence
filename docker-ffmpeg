#!/bin/ash
# FFMPEG Launcher

echo ""
echo "$(date) - Docker Launch"
echo ""

# TZ SET - Requires tzdata package
if [[ "$TZ" == "" ]]; then
    echo timezone not defined using ENV 'TZ', using UTC.
    TIMEZONE=UTC
else
    if [ -e /usr/share/zoneinfo/$TZ ]; then
        echo Using timezone: $TZ
        TIMEZONE=$TZ
    else
        echo Invalid timezone defined in input.conf file, using UTC.
        TIMEZONE=UTC
    fi
fi
cp /usr/share/zoneinfo/$TIMEZONE /etc/localtime
echo $TIMEZONE >  /etc/timezone

if [ ! -e /output ]; then
    echo "No volume mounted to /output.  Exiting."
    exit 1
fi

if [ ! -e /output/tmp ]; then
    mkdir /output/tmp
fi

if [[ "${INPUT_STREAM}" == "" ]]; then
    echo "$(date) - INPUT_STREAM is required.  Exiting."
    exit 1
fi

docker-ffmpeg-watcher &

while true; do
    # Cleanup premature exits from previous runs
    if [ $(ls /output/tmp | wc -l) -ne 0 ]; then
        for file in $(ls /output/tmp); do
            # Create Directory if not exists
            if [ ! -e /output/$(echo $file | cut -d_ -f2 | cut -d- -f1)/$(echo $file | cut -d_ -f2 | cut -d- -f2)/$(echo $file | cut -d_ -f2 | cut -d- -f3)/$(echo $file | cut -d_ -f3 | cut -d- -f1) ]; then
                mkdir -p /output/$(echo $file | cut -d_ -f2 | cut -d- -f1)/$(echo $file | cut -d_ -f2 | cut -d- -f2)/$(echo $file | cut -d_ -f2 | cut -d- -f3)/$(echo $file | cut -d_ -f3 | cut -d- -f1)
            fi
            # Convert TS to MP4
            echo "$(date) - Starting Processing of Previous Temporary File - $file"
            nice -n 30 ffmpeg -hide_banner -fflags discardcorrupt -err_detect ignore_err -i /output/tmp/$file -c copy /output/$(echo $file | cut -d_ -f2 | cut -d- -f1)/$(echo $file | cut -d_ -f2 | cut -d- -f2)/$(echo $file | cut -d_ -f2 | cut -d- -f3)/$(echo $file | cut -d_ -f3 | cut -d- -f1)/$(echo $file | cut -d. -f1).${SEGMENT_EXTENSION}
            ffprobe /output/tmp/$file 2&>/dev/null
            if [ $? -eq 0 ]; then
                rm /output/tmp/$file
            else
                if [ $DELETE_CORRUPT -eq 1 ]; then
                    echo "Final file is corrupt but DELETE_CORRUPT is set - Deleting temporary file - /output/tmp/$file"
                    rm /output/tmp/$file
                else
                    echo "Temporary file not deleted because final file is corrupt - /output/tmp/$file"
                fi
            fi
            echo "$(date) - Completed Processing File - $file"
        done
    fi

    if [ $NO_AUDIO -eq 1 ]; then
        AUDIO="-an"
    else
        AUDIO=""
    fi
    
    if [ $ADD_BUFFER -eq 1 ]; then
        BUFFER="nobuffer+"
    else
        BUFFER=""
    fi

    echo "$(date) - Processing Started."
    ffmpeg -analyzeduration 5000000 -probesize 50000000 -fflags discardcorrupt+genpts+${BUFFER}autobsf -f rtsp -rtsp_flags prefer_tcp -timeout 5000000 -re -err_detect ignore_err -i ${INPUT_STREAM} ${AUDIO} -flags +global_header -movflags frag_keyframe+empty_moov+default_base_moof+rtphint -c copy -f segment -segment_time ${SEGMENT_TIME} -segment_atclocktime 1 -segment_format ${SEGMENT_FORMAT} -strftime 1 /output/tmp/${OUTPUT_PREFIX}_%Y-%m-%d_%H-%M-%S_%Z.ts
    echo "$(date) - Processing Exit."
    sleep 5
done
exit 0
